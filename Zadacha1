# На координатной плоскости рисуются окружности, у каждой окружности следующие параметры: координаты X и Y - центра окружности, и значение R - это радиус окружности. 
# По умолчанию центр находится в (0, 0), а радиус равен 1. Реализуйте класс Окружность, который инициализируется по этим параметрам. Круг также может:
# - Находить и возвращать свою Площадь
# - Находить и возвращать свой Периметр
# - Увеличиваться в K раз
# - Определять, пересекается ли он с другой окружностью.
# Написать меню, которое будет иметь следующий вид:
# 1)	Создать окружность
# 2)	Найти площадь окружности 
# 3)	Найти периметр
# 4)	Увеличить радиус окружности
# 5)	Определить пересечение окружности с номером N с окружностью с номером M
# 6)	Выход
# Предусмотреть обработку ошибок (несуществующий номер окружности). Нумерацию окружностей предусмотреть с 1!!


import math

class Circle(object):
    def __init__(self, x, y, r):
        self.centerX = x
        self.centerY = y
        self.radius = r
    def area(self):
        print("Площадь окружности с центром в точке (", self.centerX, ";", self.centerY, ") и радиусом =", self.radius, ", равен ", self.radius**2 * math.pi)
    def perimeter(self):
        print("Периметр окружности с центром в точке (", self.centerX, ";", self.centerY, ") и радиусом =", self.radius, ", равен ", self.radius *2 * math.pi)
    def increase(self, n):
        e = math.sqrt((self.radius**2 * math.pi * 2) / math.pi)
        self.radius = e
        print("Окружность увеличена. Теперь её радиус = ", self.radius)
    def intersection(self, x2, y2, r2, n, m):
        d = math.sqrt((self.centerX - x2) ** 2 + (self.centerY - y2) ** 2)
        if d < self.radius - r2: print("Окружность с номером ", m, "принадлежит окружности с номером ", n)
        elif d < r2 - self.radius: print("Окружность с номером ", n, "принадлежит окружности с номером ", m)
        elif d > self.radius + r2: print("Окружности с номерами ", n, "и ", m, "не пересекаются")
        else:
            print("Окружности с номерами ", n, "и ", m, "пересекаются")


s = []
print("Выберите действие:\n1) Создать окружность \n2) Найти площадь окружности \n3) Найти периметр \n4) Увеличить радиус окружности \n5) Определить пересечение двух окружностей \n6) Выход")
c = int(input("Введите номер пункта из меню: "))
while c != 6:
    if c == 1:
        X = int(input("X координата центра = "))
        Y = int(input("Y координата центра = "))
        R = int(input("Радиус окружности = "))
        s.append(Circle(X, Y, R))
    elif c == 2:
        num = int(input("Введите номер окружности: "))
        while num > len(s) or num < 1:
            num = int(input("Окружности с данным номером не существет, повиторите попытку: "))
        s[num-1].area()
    elif c == 3:
        num = int(input("Введите номер окружности: "))
        while num > len(s) or num < 1:
            num = int(input("Окружности с данным номером не существет, повиторите попытку: "))
        s[num-1].perimeter()
    elif c == 4:
        num = int(input("Введите номер окружности: "))
        while num > len(s) or num < 1:
            num = int(input("Окружности с данным номером не существет, повиторите попытку: "))
        n = int(input("Во сколько раз вых отите увеличить окружность? - "))
        s[num-1].increase(n)
    elif c == 5:
        if len(s) > 1:
            num = int(input("Введите номер окружности: "))
            while num > len(s) or num < 1:
                num = int(input("Окружности с данным номером не существет, повиторите попытку: "))
            m = int(input("Введите номер второй окружности: "))
            while m > len(s):
                m = int(input("Окружности с данным номером не существет, повиторите попытку: "))
            s[num-1].intersection(s[m-1].centerX, s[m-1].centerY, s[m-1].radius, num, m)
        else:
            print("Вы ещё не создали две или более окружности. Создайте их и повторите попытку")
    else:
        print("Введён некорректный номер пункта меню")
    c = int(input("Введите номер пункта из меню: "))
print("Программа завершила работу.")
